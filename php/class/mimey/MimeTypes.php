<? namespace Mimey;class MimeTypes implements MimeTypesInterface{private static $built_in;protected $mapping;public function __construct($mapping=null){if($mapping===null){$this->mapping=self::getBuiltIn();}else{$this->mapping=$mapping;}}public function getMimeType($extension){$extension=$this->cleanInput($extension);if(!empty($this->mapping['mimes'][$extension])){return $this->mapping['mimes'][$extension][0];}return null;}public function getExtension($mime_type){$mime_type=$this->cleanInput($mime_type);if(!empty($this->mapping['extensions'][$mime_type])){return $this->mapping['extensions'][$mime_type][0];}return null;}public function getAllMimeTypes($extension){$extension=$this->cleanInput($extension);if(isset($this->mapping['mimes'][$extension])){return $this->mapping['mimes'][$extension];}return [];}public function getAllExtensions($mime_type){$mime_type=$this->cleanInput($mime_type);if(isset($this->mapping['extensions'][$mime_type])){return $this->mapping['extensions'][$mime_type];}return [];}private function cleanInput($input){return strtolower(trim($input));}protected static function getBuiltIn(){if(self::$built_in===null){self::$built_in=require('mime.types.php');}return self::$built_in;}}